@model BookNGo.Models.ApplicationUser

@{
    ViewBag.Title = "Edit Profile";
}

<h2>Edit your profile</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @*<h4>@User.Identity.Name</h4>*@
    @*<hr />*@
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 magnify-label-sm" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 magnify-label-sm" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label magnify-label-sm" })
        <div class="col-md-10">
            @Html.DropDownList("gender", new SelectList(new List<SelectListItem>() {
                new SelectListItem(){Text="Male", Value="Male"},
                new SelectListItem(){Text="Female", Value="Female"}
            }, "Value", "Text", "..Select.."), new { @class= "btn btn-default-bg-white btn-sm" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2 magnify-label-sm" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, "Location", htmlAttributes: new { @class = "control-label col-md-2 magnify-label-sm" })
        <div class="col-md-10">
            @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back", "Details", null, new { @class="btn btn-info btn-sm"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}